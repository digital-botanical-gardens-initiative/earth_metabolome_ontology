[PrefixDeclaration]
:		https://purl.org/emi/abox#
sw:		http://www.w3.org/2003/06/sw-vocab-status/ns#
up:		http://purl.uniprot.org/core/
wd:		http://www.wikidata.org/entity/
emi:		https://purl.org/emi#
npc:		https://purl.org/npc#
org:		http://www.w3.org/ns/org#
owl:		http://www.w3.org/2002/07/owl#
rdf:		http://www.w3.org/1999/02/22-rdf-syntax-ns#
sdo:		http://schema.org/
usi:		https://metabolomics-usi.ucsd.edu/dashinterface/?usi1=
xml:		http://www.w3.org/XML/1998/namespace
xsd:		http://www.w3.org/2001/XMLSchema#
bibo:		http://purl.org/ontology/bibo/
foaf:		http://xmlns.com/foaf/0.1/
obda:		https://w3id.org/obda/vocabulary#
prov:		http://www.w3.org/ns/prov#
rdfs:		http://www.w3.org/2000/01/rdf-schema#
skos:		http://www.w3.org/2004/02/skos/core#
sosa:		http://www.w3.org/ns/sosa/
vann:		http://purl.org/vocab/vann/
voaf:		http://purl.org/vocommons/voaf#
void:		http://rdfs.org/ns/void#
orcid:		http://orcid.org/
widoco:		https://w3id.org/widoco/vocab#
dcterms:		http://purl.org/dc/terms/

[MappingDeclaration] @collection [[
mappingId	canopus_compound_summary
target		:CANOPUS-{usi} a emi:ChemicalTaxonAnnotation ; rdfs:label "The CANOPUS annotation of {usi}"^^xsd:string ; emi:hasClass npc:{npc_class} ; emi:hasClassProbability {NPC_class_Probability}^^xsd:double ; emi:hasSuperClassProbability {NPC_superclass_Probability}^^xsd:double ; emi:hasPathwayProbability {NPC_pathway_Probability}^^xsd:double . usi:{usi} emi:hasAnnotation :CANOPUS-{usi} . 
source		SELECT usi, npc_class, NPC_pathway_Probability, NPC_superclass_Probability, NPC_class_Probability, featureId FROM ( SELECT DISTINCT CONCAT('mzspec:', TRIM(TRAILING '\r' FROM m.massive_id), ':', m.sample_id, '_features_ms2_', IF(ccs.id LIKE '%pos%', 'pos','neg'),'.mgf:scan:', SUBSTRING_INDEX(ccs.id,'_',-1)) AS usi, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(REPLACE(NPC_class, ' ', '_')), '(', '%28'),')', '%29'), 'Β','%CE%92'), 'Ε','%CE%95'), 'Ψ' , '%CE%A8' ), 'Γ', '%CE%93'), 'Κ','%CE%9A'), 'Π' ,'%CE%A0' ), 'Χ' ,'%CE%A7') as npc_class, NPC_pathway_Probability, NPC_superclass_Probability, NPC_class_Probability, SUBSTRING_INDEX(ccs.id,'_',-1) as featureId FROM canopus_compound_summary as ccs join sample_metadata as m on ccs.sample_id = m.sample_id AND ccs.ionization = m.ionization) as temp

mappingId	sample_data_raw_material
target		:{raw_material_id} a emi:RawMaterial ; dcterms:identifier {raw_material_id}^^xsd:string ; sosa:hasSample :{sample_extract_id} . :{sample_extract_id} a emi:ExtractSample ; rdfs:label {sample_extract_label}^^xsd:string ; dcterms:identifier {sample_extract_id}^^xsd:string ; sosa:isFeatureOfInterestOf :{sample_filename_pos} , :{sample_filename_neg} . :{sample_filename_pos} a emi:LCMSAnalysisPos ; rdfs:comment {params_pos}^^xsd:string ; emi:hasGNPSLCMSLink "https://dashboard.gnps2.org/?usi=mzspec%3A{massive_id}%3A{sample_filename_pos}"^^xsd:anyURI ; foaf:depiction <https://dashboard.gnps2.org/mspreview?usi=mzspec%3A{massive_id}%3A{sample_filename_pos}> ; emi:hasMassiveDOI <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> . :{sample_filename_neg} a emi:LCMSAnalysisNeg ; rdfs:comment {params_neg}^^xsd:string ; emi:hasGNPSLCMSLink "https://dashboard.gnps2.org/?usi=mzspec%3A{massive_id}%3A{sample_filename_neg}"^^xsd:anyURI ; foaf:depiction <https://dashboard.gnps2.org/mspreview?usi=mzspec%3A{massive_id}%3A{sample_filename_neg}> ; emi:hasMassiveDOI <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> . <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> dcterms:license <https://creativecommons.org/publicdomain/zero/1.0/> . 
source		SELECT DISTINCT source_id as raw_material_id, source_taxon as taxon_label, sample_id as sample_extract_id, CONCAT('Sample ', sample_id) as sample_extract_label,sample_filename_pos, sample_filename_neg, CONCAT(sample_id,'_lcms_processing_params_', ionization, '.xml' ) as processing_params_file, TRIM(TRAILING '\r' FROM massive_id) as massive_id,CASE WHEN ionization = 'pos' THEN lcms_method_params  END as params_pos, CASE WHEN ionization = 'neg' THEN lcms_method_params  END as params_neg   FROM sample_metadata WHERE sample_type = 'sample'

mappingId	sample_data_blank
target		:{sample_id} a emi:Blank ; rdfs:label {blank_label}^^xsd:string ; dcterms:identifier {sample_id}^^xsd:string ; sosa:isFeatureOfInterestOf :{sample_filename_pos} , :{sample_filename_neg} . :{sample_filename_pos} a emi:LCMSAnalysisPos ; rdfs:comment {params_pos}^^xsd:string ; emi:hasMassiveDOI <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> . :{sample_filename_neg} a emi:LCMSAnalysisNeg ; rdfs:comment {params_neg}^^xsd:string ; emi:hasMassiveDOI <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> . <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> dcterms:license <https://creativecommons.org/publicdomain/zero/1.0/> . 
source		SELECT DISTINCT sample_id, CONCAT('Blank ', sample_id) as blank_label,sample_filename_pos, sample_filename_neg, TRIM(TRAILING '\r' FROM massive_id) as massive_id,CASE WHEN ionization = 'pos' THEN lcms_method_params  END as params_pos, CASE WHEN ionization = 'neg' THEN lcms_method_params  END as params_neg  FROM sample_metadata WHERE sample_type = 'blank'

mappingId	sample_data_qc
target		:{sample_id} a emi:QCSample ; rdfs:label {blank_label}^^xsd:string ; dcterms:identifier {sample_id}^^xsd:string ; sosa:isFeatureOfInterestOf :{sample_filename_pos} , :{sample_filename_neg} . :{sample_filename_pos} a emi:LCMSAnalysisPos ; rdfs:comment {params_pos}^^xsd:string ; emi:hasMassiveDOI <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> . :{sample_filename_neg} a emi:LCMSAnalysisNeg ; rdfs:comment {params_neg}^^xsd:string ; emi:hasMassiveDOI <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> . <https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession={massive_id}> dcterms:license <https://creativecommons.org/publicdomain/zero/1.0/> . 
source		SELECT DISTINCT sample_id, CONCAT('Quality control sample ', sample_id) as blank_label,sample_filename_pos, sample_filename_neg, TRIM(TRAILING '\r' FROM massive_id) as massive_id,CASE WHEN ionization = 'pos' THEN lcms_method_params  END as params_pos, CASE WHEN ionization = 'neg' THEN lcms_method_params  END as params_neg  FROM sample_metadata WHERE sample_type = 'qc'

mappingId	taxon_metadata
target		:{source_id} sosa:isSampleOf :ORGANISM-{wd_id} . :ORGANISM-{wd_id} a emi:Organism ; emi:inTaxon <{wd_value}> . <{wd_value}> rdfs:label {source_taxon}^^xsd:string ; dcterms:identifier {wd_id}^^xsd:string . 
source		SELECT  DISTINCT source_id, TRIM(TRAILING '\r' FROM wd_value) as wd_value, source_taxon, REPLACE( TRIM(TRAILING '\r' FROM wd_value), 'http://www.wikidata.org/entity/', '') as wd_id FROM taxon_metadata where wd_value != '\r' and wd_value is not Null

mappingId	features_quant
target		:{sample_filename} emi:hasLCMSFeatureSet :{sample_id}_lcms_feature_list_{ionization} . :{sample_id}_lcms_feature_list_{ionization} a emi:LCMSFeatureSet ; rdfs:label "{ionization} LCMS feature set of {sample_id}"^^xsd:string ; rdfs:comment "The LCMS feature list in {ionization} ionization mode of {sample_id}"^^xsd:string ; emi:hasLCMSFeature usi:mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{row_ID} . usi:mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{row_ID} a emi:LCMSFeature ; rdfs:label "{ionization} LCMS feature {row_ID} of {sample_id}"^^xsd:string ; rdfs:comment "The LCMS feature {row_ID} of LCMS feature list in {ionization} ionization mode of {sample_id}"^^xsd:string ; emi:hasRowId {row_ID}^^xsd:integer ; emi:hasRetentionTime {row_retention_time}^^xsd:double ; emi:hasFeatureArea {peak_area}^^xsd:double ; emi:hasRelativeFeatureArea {relative_area}^^xsd:double ; emi:hasParentMass {row_mz}^^xsd:double ; emi:hasUSI "mzspec:{massive_id}:{sample_id}_features_ms2_{ionization}.mgf:scan:{row_ID}"^^xsd:string ; rdfs:seeAlso <https://fasst.gnps2.org/fastsearch/?usi1=mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{row_ID}> ; foaf:depiction <https://metabolomics-usi.gnps2.org/png/?usi1=mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{row_ID}> . 
source		SELECT  DISTINCT f.sample_id, f.ionization, TRIM(TRAILING '\r' FROM massive_id) as massive_id, row_ID, row_retention_time, peak_area, row_mz, (peak_area/max_area) as relative_area, CASE WHEN f.ionization = 'pos' THEN sample_filename_pos WHEN f.ionization = 'neg' THEN sample_filename_neg END  as sample_filename FROM features_quant as f join sample_metadata as m ON m.sample_id = f.sample_id AND m.ionization = f.ionization JOIN (SELECT sample_id, ionization, MAX(peak_area) as max_area  FROM  features_quant GROUP BY sample_id, ionization ) as max_table ON max_table.sample_id = f.sample_id and max_table.ionization = f.ionization WHERE sample_type = 'sample'

mappingId	compound_identifications
target		usi:mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{featureId} emi:hasAnnotation :sirius_mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{featureId} . :sirius_mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{featureId} a emi:StructuralAnnotation ; prov:wasGeneratedBy :SIRIUS-ANNOTATOR-{sample_filename} ; emi:hasChemicalStructure :{InChIkey2D} ; rdfs:label "SIRIUS annotation of {ionization} LCMS feature {featureId} of {sample_id}"^^xsd:string ; rdfs:comment "The SIRIUS tool annotation of mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{featureId} (a LCMS feature identifier)"^^xsd:string ; emi:hasAdduct {adduct}^^xsd:string ; emi:hasCosmicScore {ConfidenceScore}^^xsd:double ; emi:hasZodiacScore {ZodiacScore}^^xsd:double ; emi:hasScore {SiriusScore}^^xsd:double . :{InChIkey2D} a emi:InChIKey2D ; emi:hasSMILES {smiles}^^xsd:string ; rdfs:label {InChIkey2D}^^xsd:string . :SIRIUS-ANNOTATOR-{sample_filename} prov:used :SIRIUS-PARAMETERS-{sample_filename} ; prov:wasAssociatedWith <https://bio.informatik.uni-jena.de/software/sirius> . :SIRIUS-PARAMETERS-{sample_filename} rdfs:label "/{sample_id}/{ionization}/{sample_id}_WORKSPACE_SIRIUS/params.yml"^^xsd:string . <https://bio.informatik.uni-jena.de/software/sirius> rdfs:label ""^^xsd:string . 
source		SELECT DISTINCT TRIM(TRAILING '\r' FROM massive_id) as massive_id, SUBSTRING_INDEX(id,'_',-1) as featureId, c.ionization, c.sample_id, InChIkey2D, adduct, SiriusScore, ZodiacScore, ConfidenceScore, IF(c.ionization = 'pos', sample_filename_pos,  sample_filename_neg) as sample_filename, smiles  FROM compound_identifications c JOIN sample_metadata m ON m.ionization = c.ionization AND m.sample_id = c.sample_id

mappingId	isdb_reweighted_flat
target		usi:mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{featureId} emi:hasAnnotation :isdb_mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{featureId} . :isdb_mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{featureId} a emi:StructuralAnnotation ; emi:hasChemicalStructure :{short_inchikey} ; prov:wasGeneratedBy :ISDB-ANNOTATOR-{sample_filename} ; rdfs:label "ISDB annotation of {ionization} LCMS feature {featureId} of {sample_id}"^^xsd:string ; rdfs:comment "The ISDB annotation of mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{featureId} (a LCMS feature identifier)"^^xsd:string ; emi:hasAdduct {adduct}^^xsd:string ; emi:hasConsistencyScore {score_max_consistency}^^xsd:integer ; emi:hasSpectralScore {score_input}^^xsd:double ; emi:hasFinalScore {final_score}^^xsd:double ; emi:hasTaxoScore {score_taxo}^^xsd:integer . :{short_inchikey} a emi:InChIKey2D ; rdfs:label {short_inchikey}^^xsd:string ; emi:hasSMILES {smiles}^^xsd:string . :ISDB-ANNOTATOR-{sample_filename} prov:used :ISDB-PARAMETERS-{sample_filename} ; prov:wasAssociatedWith <https://oolonek.github.io/ISDB> . <https://oolonek.github.io/ISDB> rdfs:label "In-Silico MS/MS DataBase (ISDB)"^^xsd:string . :ISDB-PARAMETERS-{sample_filename} rdfs:label "/{sample_id}/{ionization}/isdb/config.yaml"^^xsd:string . 
source		SELECT DISTINCT TRIM(TRAILING '\r' FROM massive_id) as massive_id, featureId, c.ionization, c.sample_id, short_inchikey, score_input, score_taxo, score_max_consistency, final_score, adduct, IF(c.ionization = 'pos', sample_filename_pos,  sample_filename_neg) as sample_filename, IF(structure_smiles_2D != '',structure_smiles_2D, Null)  as smiles FROM isdb_reweighted_flat c JOIN sample_metadata m ON m.ionization = c.ionization AND m.sample_id = c.sample_id

mappingId	structures_metadata
target		:{short_inchikey} emi:hasSMILES {smiles}^^xsd:string ; emi:hasClass npc:{npc_class_taxon} ; emi:isInChIKey2DOf :{inchikey} . :{inchikey} a emi:InChIKey ; emi:hasSMILES {isomeric_smiles}^^xsd:string ; rdfs:label {inchikey} . 
source		SELECT DISTINCT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(REPLACE(npc_class, ' ', '_')), '(', '%28'),')', '%29'), 'Β','%CE%92'), 'Ε','%CE%95'), 'Ψ' , '%CE%A8' ), 'Γ', '%CE%93'), 'Κ','%CE%9A'), 'Π' ,'%CE%A0' ), 'Χ' ,'%CE%A7') as npc_class_taxon, inchikey, isomeric_smiles, short_inchikey, smiles, npc_pathway, npc_superclass, npc_class FROM structures_metadata

mappingId	structures_metadata_wikidata
target		:{inchikey} emi:isInChIKeyOf <{wikidata_id}> . <{wikidata_id}> a emi:WDChemicalStructure ; dcterms:identifier {wd_id}^^xsd:string . 
source		SELECT DISTINCT REPLACE(wikidata_id, 'http://www.wikidata.org/entity/', '') as wd_id, wikidata_id, inchikey FROM structures_metadata WHERE wikidata_id != 'no_wikidata_match' and 'wikidata_id' is not NULL

mappingId	molecular_network
target		usi:{usi_scan_prefix}{source_id} a emi:LCMSFeature ; emi:hasFBMNComponent :{sample_id}_fbmn_{ionization}_componentindex_{component_id} . usi:{usi_scan_prefix}{target_id} a emi:LCMSFeature ; emi:hasFBMNComponent :{sample_id}_fbmn_{ionization}_componentindex_{component_id} . :LCMS-FEATURE-PAIR-{usi_scan_prefix}{source_id}-{usi_scan_prefix}{target_id} a emi:LFpair ; emi:hasCosine {cosine}^^xsd:double ; emi:hasMassDifference {mass_diff}^^xsd:double ; emi:hasFirstMember usi:{usi_scan_prefix}{feature_id_member_1} ; emi:hasSecondMember usi:{usi_scan_prefix}{feature_id_member_2} ; prov:wasGeneratedBy :MOLECULAR-NETWORKING-{usi_scan_prefix}{source_id}-{usi_scan_prefix}{target_id} . :MOLECULAR-NETWORKING-{usi_scan_prefix}{source_id}-{usi_scan_prefix}{target_id} a prov:Activity ; prov:used :MN-PARAMETERS-{sample_id} . :MN-PARAMETERS-{sample_id}-{ionization} rdfs:label "/{sample_id}/{ionization}/molecular_network/config.yaml"^^xsd:string . 
source		SELECT DISTINCT mn.sample_id, mn.ionization, mn.source_id , mn.target_id, CONCAT('mzspec:', TRIM(TRAILING '\r' FROM massive_id), ':' , mn.sample_id , '_features_ms2_' , mn.ionization , '.mgf:scan:' ) as usi_scan_prefix, mds.component_id, ABS(mds.precursor_mz - mdt.precursor_mz) as  mass_diff, weight as cosine, CASE WHEN mds.precursor_mz > mdt.precursor_mz THEN mn.source_id ELSE mn.target_id END as feature_id_member_1, CASE WHEN mds.precursor_mz > mdt.precursor_mz THEN mn.target_id ELSE mn.source_id END as feature_id_member_2 FROM molecular_network mn  JOIN molecular_network_metadata mds ON mds.ionization = mn.ionization AND mds.sample_id = mn.sample_id AND mn.source_id = mds.feature_id  JOIN molecular_network_metadata mdt ON mdt.ionization = mn.ionization AND mdt.sample_id = mn.sample_id AND mn.target_id = mdt.feature_id  JOIN sample_metadata sm ON sm.sample_id = mn.sample_id AND sm.ionization = mn.ionization

mappingId	spec2spec_doc
target		usi:mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{feature_id} emi:hasRawSpectrum {raw_spectrum}^^xsd:string ; emi:hasSpec2VecDoc :spec2vec_doc_mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{feature_id} . :spec2vec_doc_mzspec%3A{massive_id}%3A{sample_id}_features_ms2_{ionization}.mgf%3Ascan%3A{feature_id} a emi:Spec2VecDoc ; rdfs:label "Spec2vec document of feature {feature_id} from sample {sample_id} in {ionization} mode"^^xsd:string ; emi:hasSpec2VecPeak {peak}^^xsd:double ; emi:hasSpec2VecLoss {loss}^^xsd:double . 
source		SELECT DISTINCT  feature_id, raw_spectrum, sd.sample_id, sd.ionization, TRIM(TRAILING '\r' FROM massive_id) as massive_id, REPLACE(word,'@','_') as word_doc, IF(word LIKE 'peak%', REPLACE(word, 'peak@',''),  NULL) as peak, IF(word LIKE 'loss%', REPLACE(word, 'loss@',''),  NULL) as loss FROM spec2vec_doc as sd JOIN  sample_metadata sm ON sm.sample_id = sd.sample_id AND sm.ionization = sd.ionization

mappingId	open_tree_life
target		<https://tree.opentreeoflife.org/taxonomy/browse?id={uid}> a skos:Concept ; rdfs:label {tax_name}^^xsd:string ; skos:prefLabel {tax_name}^^xsd:string ; dcterms:identifier {uid} ; skos:broader <https://tree.opentreeoflife.org/taxonomy/browse?id={parent_uid}> ; skos:inScheme <https://tree.opentreeoflife.org> . 
source		SELECT uid, parent_uid, tax_name FROM open_tree_life;

mappingId	open_tree_life_2
target		<https://tree.opentreeoflife.org/taxonomy/browse?id={uid}> a up:Taxon , emi:Taxon ; up:rank up:{rannk} . up:{rannk} a up:Rank ; rdfs:label {tax_rank}^^xsd:string . 
source		SELECT distinct uid, CONCAT(UCASE(LEFT(tax_rank, 1)), LCASE(SUBSTRING(tax_rank, 2))) as rannk, tax_rank FROM open_tree_life where tax_rank not in ('No rank - terminal','No rank')

mappingId	open_tree_life_synonym
target		<https://tree.opentreeoflife.org/taxonomy/browse?id={uid}> skos:altLabel {synonym}^^xsd:string ; rdfs:label {synonym}^^xsd:string . 
source		SELECT trim(replace(replace(replace(substring_index(tax_name, '"',2), '"',''), '\'',''), '?', '')) as synonym, uid FROM open_tree_life_synonym

mappingId	open_tree_life_synonym_2
target		<https://tree.opentreeoflife.org/taxonomy/browse?id={uid}> skos:exactMatch <{iri_mapping}> . <{iri_mapping}> dcterms:identifier {external_id}^^xsd:string . 
source		SELECT uid, substring_index( IF( sourceinfo like 'ncbi:%', replace(sourceinfo, 'ncbi:','https://www.uniprot.org/taxonomy/'), replace(sourceinfo, 'gbif:','https://www.gbif.org/species/')),',' ,1 ) as iri_mapping, substring_index(sourceinfo,',','1') as external_id  FROM open_tree_life_synonym where (sourceinfo like 'ncbi:%' or sourceinfo like 'gbif:%')
]]

